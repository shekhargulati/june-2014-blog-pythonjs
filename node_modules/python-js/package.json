{
  "author": {
    "name": "Brett Hartshorn",
    "email": "goatman.py@gmail.com"
  },
  "name": "python-js",
  "description": "python multi-translator: javascript, dart, coffee, lua, vis.js",
  "version": "0.9.6",
  "license": "BSD-3-Clause",
  "repository": {
    "type": "git",
    "url": "git://github.com/PythonJS/PythonJS.git"
  },
  "keywords": [
    "pythonjs",
    "python",
    "dart",
    "lua",
    "transpiler"
  ],
  "dependencies": {
    "workerjs": "*",
    "requirejs": "*"
  },
  "engines": {
    "node": "*"
  },
  "preferGlobal": true,
  "main": "./python-js",
  "bin": {
    "python-js": "./cli.js"
  },
  "files": [
    "lib",
    "fakelibs",
    "empythoned.js",
    "python-js",
    "pythonjs.js",
    "pythonjs.py",
    "python_to_pythonjs.py",
    "ministdlib.py",
    "pythonjs_to_dart.py",
    "pythonjs_to_coffee.py",
    "pythonjs_to_lua.py",
    "python_to_visjs.py",
    "code_writer.py",
    "inline_function.py",
    "ast_utils.py",
    "cli.js",
    "runtime"
  ],
  "readme": "PythonJS\n======\n\nPythonJS is a multi-language Python translator.  The translator is written in Python and runs inside NodeJS using a hacked and stripped down version of Empythoned.  Empythoned is the standard C-Python interpreter compiled to JavaScript using Emscripten.\n\nPythonJS can be used from the command line or as a library within your own NodeJS program.  By default the translator will output JavaScript.  You can also use the experimental backends for: Dart, Coffee, Lua and Vis.js.  The Vis.js backend turns your code into a graph so you can inspect it visually in a web-browser using the vis.js library.\n\n####Command Line\n\n\tpython-js INPUT OUTPUT [--dart, --coffee, --lua, --visjs]\n\n\n####NodeJS Module\n\n\tvar pythonjs = require('python-js');\n\n\tvar code = pythonjs.translator.to_javascript( my_python_code ) // output javascript\n\teval( code )  // runs the javascript output server side within nodejs\n\n\t// experimental backends\n\tvar code = pythonjs.translator.to_dart( my_python_code )       // output dart\n\tvar code = pythonjs.translator.to_coffee( my_python_code )     // output coffeescript\n\tvar code = pythonjs.translator.to_lua( my_python_code )        // output lua\n\tvar code = pythonjs.translator.to_visjs( my_python_code )      // output a graph for vis.js\n\n\t// the runtime required on the client side by the javascript and coffee backends\n\tvar header = pythonjs.runtime.javascript\n\nThe PythonJS module exports an object named `translator` that contains functions to translate your python code using one of the backends.\n\nWhen translating code for the Dart or Lua backends the required runtime header is inserted at the top of the output.  Note that for the Javascript and Coffee backends, the runtime header is not included in the output - so if code is going to be run on the client side in a web browser, then you will need to manually include `pythonjs.js` script in the HTML page.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/PythonJS/PythonJS/issues"
  },
  "homepage": "https://github.com/PythonJS/PythonJS",
  "_id": "python-js@0.9.6",
  "_shasum": "121571da5304dcb4c469ad7289154dab167cf976",
  "_from": "python-js@",
  "_resolved": "https://registry.npmjs.org/python-js/-/python-js-0.9.6.tgz"
}
